name: Deploy Spring Backend

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Spring Code
        uses: actions/checkout@v3

      - name: 🔐 application.properties 생성
        working-directory: ./ssupetition
        run: |
          mkdir -p src/main/resources
          echo "spring.datasource.url=${{ secrets.DB_URL }}" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
          echo "spring.mail.host=smtp.naver.com" >> src/main/resources/application.properties
          echo "spring.mail.port=587" >> src/main/resources/application.properties
          echo "spring.mail.username=${{ secrets.MAIL_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.mail.password=${{ secrets.MAIL_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.auth=true" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.starttls.enable=true" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.starttls.required=true" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.ssl.trust=smtp.naver.com" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.connectiontimeout=5000" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.timeout=5000" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.writetimeout=5000" >> src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2" >> src/main/resources/application.properties

      - name: ☕ Gradle Build (jar 생성)
        run: ./gradlew build -x test
        working-directory: ./ssupetition

      - name: 🐳 Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Docker 이미지 Build & Push with Git SHA Tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build -t ${{ secrets.DOCKER_USERNAME }}/soongmin:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/soongmin:latest
        working-directory: ./ssupetition

      - name: 🚀 EC2에 SSH 접속 후 backend 재배포
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            IMAGE_TAG=${{ github.sha }}
            cd ~/my-app
            docker compose pull backend
            docker compose up -d backend
